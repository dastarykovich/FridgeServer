// <auto-generated />
using System;
using Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FridgeServer.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220802135345_ReplacingTextToNVARCHAR")]
    partial class ReplacingTextToNVARCHAR
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("name");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("owner_name");

                    b.HasKey("Id");

                    b.ToTable("fridge");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b544aed-49ad-41f4-9372-8f2d9a9e6956"),
                            Name = "Bosch",
                            OwnerName = "Alex"
                        },
                        new
                        {
                            Id = new Guid("48691dc6-312c-48e5-bd0d-ff23c852b9b3"),
                            Name = "LG",
                            OwnerName = "Mike"
                        },
                        new
                        {
                            Id = new Guid("50e1549e-0bc1-4f8d-a21e-648738e3ecb9"),
                            Name = "VR",
                            OwnerName = "Nikita"
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("id");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("fridge_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("name");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.ToTable("fridge_model");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d098d69c-ff78-4f2a-bf7f-c9d343898963"),
                            FridgeId = new Guid("2b544aed-49ad-41f4-9372-8f2d9a9e6956"),
                            Name = "KGV39XW2AR",
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("14ac0bdd-7e08-4d49-a439-6c4634529d74"),
                            FridgeId = new Guid("48691dc6-312c-48e5-bd0d-ff23c852b9b3"),
                            Name = "GA-B379SLUL",
                            Year = 2018
                        },
                        new
                        {
                            Id = new Guid("6a5845af-1c8b-4060-9f1c-70018a63cb09"),
                            FridgeId = new Guid("50e1549e-0bc1-4f8d-a21e-648738e3ecb9"),
                            Name = "FR-102V",
                            Year = 2017
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("id");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("fridge_id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantuty")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("ProductId");

                    b.ToTable("fridge_products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ad906f6-5740-4bb8-a7b3-d70134cec431"),
                            FridgeId = new Guid("2b544aed-49ad-41f4-9372-8f2d9a9e6956"),
                            ProductId = new Guid("7ac83035-17e7-4a9d-89ef-a7e2b14e931b"),
                            Quantuty = 2
                        },
                        new
                        {
                            Id = new Guid("d6cb8731-b5a4-4ca6-9895-cab735417d93"),
                            FridgeId = new Guid("48691dc6-312c-48e5-bd0d-ff23c852b9b3"),
                            ProductId = new Guid("5c6d012b-dc74-4580-9716-141de40af83d"),
                            Quantuty = 3
                        },
                        new
                        {
                            Id = new Guid("23ae3b61-067f-4c2a-88cb-11b6098712de"),
                            FridgeId = new Guid("48691dc6-312c-48e5-bd0d-ff23c852b9b3"),
                            ProductId = new Guid("6f377e69-b477-463a-a874-763660787941"),
                            Quantuty = 1
                        },
                        new
                        {
                            Id = new Guid("e47f4bc8-60d7-4e59-b4c3-af50b7f732dc"),
                            FridgeId = new Guid("50e1549e-0bc1-4f8d-a21e-648738e3ecb9"),
                            ProductId = new Guid("394c70b6-53c7-4b0a-bf98-a1bbd7c3c5c5"),
                            Quantuty = 2
                        },
                        new
                        {
                            Id = new Guid("bd22f93c-252c-4cd9-b23e-6c7345804f9c"),
                            FridgeId = new Guid("50e1549e-0bc1-4f8d-a21e-648738e3ecb9"),
                            ProductId = new Guid("3080f5cf-523e-405c-80e4-75d468a1a94e"),
                            Quantuty = 0
                        });
                });

            modelBuilder.Entity("Entities.Models.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER")
                        .HasColumnName("id");

                    b.Property<int>("DefaultQuantity")
                        .HasColumnType("int")
                        .HasColumnName("default_quantity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ac83035-17e7-4a9d-89ef-a7e2b14e931b"),
                            DefaultQuantity = 3,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("5c6d012b-dc74-4580-9716-141de40af83d"),
                            DefaultQuantity = 1,
                            Name = "Water"
                        },
                        new
                        {
                            Id = new Guid("6f377e69-b477-463a-a874-763660787941"),
                            DefaultQuantity = 10,
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = new Guid("394c70b6-53c7-4b0a-bf98-a1bbd7c3c5c5"),
                            DefaultQuantity = 1,
                            Name = "Milk"
                        },
                        new
                        {
                            Id = new Guid("3080f5cf-523e-405c-80e4-75d468a1a94e"),
                            DefaultQuantity = 2,
                            Name = "Orange"
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeModel", b =>
                {
                    b.HasOne("Entities.Models.Fridge", "Fridge")
                        .WithMany("FridgeModels")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");
                });

            modelBuilder.Entity("Entities.Models.FridgeProducts", b =>
                {
                    b.HasOne("Entities.Models.Fridge", "Fridge")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Products", "Products")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.Navigation("FridgeModels");

                    b.Navigation("FridgeProducts");
                });

            modelBuilder.Entity("Entities.Models.Products", b =>
                {
                    b.Navigation("FridgeProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
